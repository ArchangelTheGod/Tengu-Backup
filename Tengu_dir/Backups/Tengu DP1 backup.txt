<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tengu Test Server Deploy 1</title>
    <style>
      body {
        background-color: rgb(0, 0, 0);
      }
      h1 {
        color: rgb(234, 234, 234);
      }
    </style>
  </head>
  <link rel="shortcut icon" type="image/png" href="img/favicon.png" />
  <body onload="admin()">
    <h1>Tengu TEST SERVER Version Build: 0.9 BETA</h1>
    <!-- <audio controls> -->
    <!-- <source src="audio/Legacy.mp3" type="audio/mpeg"/>
    Error! -->
</audio>
    <div class="wrapper">
      <div class="actions">
        <button id="start">Say Command</button>
        <button id="end">End Command Execution</button>
        <button id="null">_temp</button>
      </div>
      <div id="transcript"></div>
      <!-- <iframe
        src="https://discord.com/widget?id=992067726665338910&theme=dark"
        width="350"
        height="500"
        allowtransparency="true"
        frameborder="0"
        sandbox="allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"
      ></iframe> -->
    </div>
    <script>
      window.SpeechRecognition =
        window.SpeechRecognition || window.webkitSpeechRecognition;

      const recognition = new SpeechRecognition();
      recognition.interimResults = true;
      const transcript_element = document.getElementById("transcript");
      const talk_button = document.getElementById("start");
      const end_button = document.getElementById("end");
      const temp_button = document.getElementById("temp");

      let p = document.createElement("p");
      transcript_element.appendChild(p);

      recognition.addEventListener("result", (e) => {
        const transcript = Array.from(e.results)
          .map((result) => result[0])
          .map((result) => result.transcript)
          .join("");
        p.textContent = transcript;
        if (e.results[0].isFinal) {
          p = document.createElement("p");
          p.textContent = transcript;
          transcript_element.appendChild(p);
          p.textContent = "";

          if (transcript.includes("Tengu updates")) {
            alert("Update Version: TEST SERVER 1.1");
          }
          if (transcript.includes("Tengu source code")) {
            window.open("https://github.com/AxxlYT/Tengu-Assistant");
          }
          if (transcript.includes("close YouTube")) {
            window.close("https://www.youtube.com");
          }
          if (transcript.includes("open YouTube")) {
            window.open("https://www.youtube.com");
          }
        }
      });

      // function admin(){
      //     alert("Administrator Access Granted! Welcome.")
      // }
      recognition.addEventListener("end", () => {
        end_button.disabled = false;
        talk_button.disabled = true;
      });
      talk_button.addEventListener("click", () => {
        end_button.disabled = false;
        talk_button.disabled = true;
        recognition.start();
      });
      end_button.addEventListener("click", () => {
        end_button.disabled = true;
        talk_button.disabled = false;
        recognition.stop();
      });
      temp_button.addEventListener("click", () => {
        temp_button.disabled = false;
      });
    </script>
  </body>
</html>
